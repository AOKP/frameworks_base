page.title=출시 검사 목록
page.metaDescription=사용자에게 앱을 제공하는 전체 프로세스를 간략히 살펴봅니다. Google Play에 성공적으로 출시하려면 개발 시 이 검사 목록을 미리 읽어보십시오.
meta.tags="localizing, publishing, disttools"
page.tags="launch, publishing, Google Play"
page.image=/distribute/images/launch-checklist.jpg

@jd:body

<div id="qv-wrapper">
  <div id="qv" style="width:280px">
    <h2>검사 목록</h2>
    <ol>
      <li><a href="#understand-publishing">1. 게시 프로세스 이해</a></li>
      <li><a href="#understand-policies">2. Google Play 정책 이해</a></li>
      <li><a href="#test-quality">3. 핵심 앱 품질 테스트</a></li>
      <li><a href="#determine-rating">4. 콘텐츠 등급 결정</a></li>
      <li><a href="#determine-country">5. 배포 대상 국가 결정</a></li>
      <li><a href="#confirm-size">6. 전체 크기 확인</a></li>
      <li><a href="#confirm-platform">7. 플랫폼 및 화면 범위 확인</a></li>
      <li><a href="#decide-price">8. 무료 또는 유료 결정</a></li>
      <li><a href="#consider-billing">9. 인앱 결제 사용</a></li>
      <li><a href="#set-prices">10. 제품 가격 책정</a></li>
      <li><a href="#start-localization">11. 현지화 시작</a></li>
      <li><a href="#prepare-graphics">12. 홍보 그래픽, 스크린샷 및 동영상 준비</a></li>
      <li><a href="#build-upload">13. 릴리스 준비된 APK 작성</a></li>
      <li><a href="#plan-beta">14. 베타 릴리스 계획</a></li>
      <li><a href="#complete-details">15. 스토어 목록 작성</a></li>
      <li><a href="#use-badges">16. Google Play 배지 및 링크 사용</a></li>
      <li><a href="#final-checks">17. 최종 확인 및 게시</a></li>
      <li><a href="#support-users">18. 출시 후 사용자 지원</a></li>
    </ol>
  </div>
</div>

<div class="top-right-float" style="width:194px"><img src="{@docRoot}distribute/images/launch-checklist.jpg"></div>

<p>
  Google Play에 앱을 게시하고 사용자에게 배포하기 전에 앱을 준비하고 테스트하고 홍보 자료를 준비해야 합니다.


</p>

<p>
  이 페이지는 Google Play의 게시 프로세스를 이해하고 성공적인 제품 출시를 준비하도록 도와줍니다.
 이 페이지에서는 서명 후 릴리스 준비된 애플리케이션 패키지(APK) 생성, 앱의 요구사항 이해, 각 앱의 제품 페이지 및 그래픽 자산 생성 등 Google Play에 앱을 게시하기 전에 완료해야 하는 몇 가지 작업을 간단히 설명합니다.




</p>

<p>
  준비 및 게시 작업은 대략적인 순서를 파악할 수 있도록 번호가 매겨져 있습니다.
 하지만 필요에 따라 임의의 순서로 작업을 처리하거나 단계를 건너뛸 수도 있습니다.

</p>

<p>
  게시 단계로 이동하면서 다양한 지원 자료를 사용할 수 있습니다.
 각 단계마다 관련 링크가 제공됩니다.
</p>

<div class="headerLine">
  <h2 id="understand-publishing">
    1. 게시 프로세스 이해
  </h2>


</div>

<p>
  이 검사 목록의 단계를 시작하기 전에 잠시 시간을 내서 전체 게시 워크플로를 읽고 이해하고 프로세스가 어떻게 진행되는지 파악해야 합니다.

 특히 개발 팀은 모든 Android 앱에 공통되는 프로세스를 사용하여 앱을 릴리스할 준비를 해야 합니다.

  <a href="{@docRoot}tools/publishing/publishing_overview.html">게시 워크플로 문서</a>에서는 게시 프로세스의 진행 방식과 APK 릴리스 준비 방법에 대한 자세한 정보를 제공합니다.


</p>

<p>
  전반적인 게시 프로세스에 익숙해지면, 계속 읽으면서 Google Play에 앱을 게시할 때 고려해야 하는 문제를 이해하십시오.


</p>

<h3 class="rel-resources clearfloat">관련 자료</h3>

<div class="resource-widget resource-flow-layout col-13" data-query=
"collection:distribute/toolsreference/launchchecklist/understanding"
data-sortorder="-timestamp" data-cardsizes="9x3,9x3,6x3,9x3,9x3,9x3"
data-maxresults="6">
</div>

<div class="headerLine">
  <h2 id="understand-policies">
    2. Google Play 정책 및 계약 이해
  </h2>


</div>

<p>
  등록 시 승인한 Google Play 프로그램 정책을 이해하고 따르십시오.
 Google Play는 해당 정책을 적극적으로 적용하며 위반 시 앱을 일시 중단하며 반복적으로 위반할 경우 개발자 계정을 해지할 수 있습니다.


</p>

<h3 class="rel-resources clearfloat">관련 자료</h3>

<div class="resource-widget resource-flow-layout col-13" data-query=
"collection:distribute/toolsreference/launchchecklist/policies" data-sortorder=
"-timestamp" data-cardsizes="6x3" data-maxresults="6">
</div>

<div class="headerLine">
  <h2 id="test-quality">
    3. 품질 테스트
  </h2>


</div>

<p>
  Google Play에 앱을 게시하기 전에 모든 대상 장치에서 모든 Android 앱에 대한 기본 품질 기대치를 충족하는지 확인하는 것은 중요합니다.

 테스트 환경을 설정하고 앱이 <strong>모든 앱에 적용되는 몇몇 품질 기준</strong>을 충족하는지 테스트하는 방식으로 앱의 품질을 점검할 수 있습니다.

 자세한 내용은 <a href="{@docRoot}distribute/essentials/quality/core.html">핵심 앱 품질</a> 가이드라인을 참조하십시오.


</p>

<p>
  앱이 태블릿 장치를 대상으로 하는 경우 태블릿 고객에게 풍부하고 매력적인 경험을 제공하는지 확인하십시오.
 앱을 태블릿용으로 최적화하는 방법에 대한 권장사항은 <a href="{@docRoot}distribute/essentials/quality/tablets.html">태블릿 앱 품질</a> 가이드라인을 참조하십시오.

</p>

<p>
  앱을 Google Play for Education에서 사용할 수 있도록 하려면 해당 앱이 유치원부터 고등학교까지의 교실에 적합하고 뛰어난 교육적 가치를 제공하는지 확인해야 합니다.

 교육 앱이 갖춰야 하는 특성에 대한 내용은 <a href="{@docRoot}distribute/essentials/gpfe-guidelines.html">교육 가이드라인</a>을 참조하십시오.


</p>

<h3 class="rel-resources clearfloat">관련 자료</h3>

<div class="resource-widget resource-flow-layout col-13" data-query=
"collection:distribute/toolsreference/launchchecklist/quality" data-sortorder=
"-timestamp" data-cardsizes="6x3,6x3,6x3,9x3,9x3,9x3" data-maxresults="6">
</div>

<div class="headerLine">
  <h2 id="determine-rating">
    4. 앱의 콘텐츠 등급 결정
  </h2>


</div>

<p>
  Google Play는 개발자가 앱의 콘텐츠 등급을 설정하여 Google Play 사용자에게 앱의 완성도를 알려주도록 요구합니다.
 게시하기 전에 사용하려는 등급 레벨을 확인해야 합니다.
 사용 가능한 콘텐츠 등급 레벨은 다음과 같습니다.

</p>

<ul>
  <li>
    <p>
      전체 이용가
    </p>
  </li>

  <li>
    <p>
      낮은 완성도
    </p>
  </li>

  <li>
    <p>
      중간 완성도
    </p>
  </li>

  <li>
    <p>
      높은 완성도
    </p>
  </li>
</ul>

<p>
  Android 장치에서 Android 사용자는 검색에 사용할 완성도를 설정할 수 있습니다.
 Google Play는 설정에 따라 앱을 필터링하므로 선택한 콘텐츠 등급은 사용자에게 앱을 배포하는 데 영향을 줄 수 있습니다.
 앱 바이너리를 변경할 필요 없이 개발자 콘솔에서 앱의 콘텐츠 등급을 할당(또는 변경)할 수 있습니다.


</p>

<h3 class="rel-resources clearfloat">관련 자료</h3>

<div class="resource-widget resource-flow-layout col-13" data-query=
"collection:distribute/toolsreference/launchchecklist/rating" data-sortorder=
"-timestamp" data-cardsizes="9x3,6x3,6x3,9x3,9x3,9x3" data-maxresults="6">
</div>

<div class="headerLine">
  <h2 id="determine-country">
    5. 배포 대상 국가 결정
  </h2>


</div>

<p>
  Google Play에서 앱이 배포되는 국가와 지역을 제어할 수 있습니다.
 일반적으로 가장 넓은 도달 범위와 가장 큰 잠재적 고객층을 확보하기 위해 가능한 모든 국가와 지역에 배포하는 것이 좋지만

  사업상의 필요나 앱 요구사항 또는 출시 종속성 때문에 하나 이상의 국가를 배포 대상 국가에서 제외해야 할 수도 있습니다.

</p>

<p>
  다음에 영향을 줄 수 있으므로 정확한 배포 대상 국가를 조기에 결정하는 것이 중요합니다.

</p>

<ul>
  <li>
    <p>
      앱에서 현지화된 자료의 필요성.
    </p>
  </li>

  <li>
    <p>
      개발자 콘솔에서 현지화된 앱 설명의 필요성.
    </p>
  </li>

  <li>
    <p>
      특정 국가에서 충족해야 하는 앱의 법적 요구사항.
    </p>
  </li>

  <li>
    <p>
      표준 시간대 지원, 현지 가격 책정 등.
    </p>
  </li>
</ul>

<p>
  대상 국가를 염두에 두고 앱과 Google Play 목록 세부정보의 현지화 필요성을 평가하고 출시 예정일에 앞서 현지화 작업을 제대로 시작해야 합니다.


</p>

<p>
  현지화 프로세스에서 핵심 단계와 고려사항은 <a href="{@docRoot}distribute/tools/localization-checklist.html">현지화 검사 목록</a>을 참조하십시오.

</p>

<h3 class="rel-resources clearfloat">관련 자료</h3>

<div class="resource-widget resource-flow-layout col-13" data-query=
"collection:distribute/toolsreference/launchchecklist/country" data-sortorder=
"-timestamp" data-cardsizes="9x3,9x3,6x3,9x3,9x3,9x3" data-maxresults="6">
</div>

<div class="headerLine">
  <h2 id="confirm-size">
    6. 앱의 전체 크기 확인
  </h2>


</div>

<p>
  앱의 전체 크기는 앱의 디자인 및 Google Play에 앱을 게시하는 방법에 영향을 줄 수 있습니다.
 현재 Google Play에 게시되는 APK의 최대 크기는 <strong>50MB</strong>입니다.
 앱이 이 크기를 초과하거나 부차적인 다운로드를 제공하려면 Google Play가 서버 인프라에서 무료로 호스팅하고 장치에 다운로드하는 과정을 자동으로 처리하는 <a href="{@docRoot}google/play/expansion-files.html">APK 확장 파일</a>을 사용할 수 있습니다.



</p>

<ul>
  <li>
    <p>
      Google Play에 게시되는 APK의 최대 크기는 50MB입니다.
    </p>
  </li>

  <li>
    <p>
      최대 크기가 2GB인 APK 확장 파일을 최대 두 개까지 사용할 수 있습니다.

    </p>
  </li>
</ul>

<p>
  APK 확장 파일을 사용하여 대형 앱을 편리하고 비용 효율적으로 배포할 수 있습니다.
 하지만 APK 확장 파일을 사용하려면 릴리스 준비된 APK를 만들기 전에 앱 바이너리를 일부 변경해야 합니다.


</p>

<p>
  앱 바이너리의 크기를 최소화하려면 릴리스 준비된 APK를 작성할 때 코드에서 <a href="{@docRoot}tools/help/proguard.html">ProGuard</a> 도구나 이와 유사한 오퍼스케이터(obfuscator)를 실행해야 합니다.

</p>

<h3 class="rel-resources clearfloat">관련 자료</h3>

<div class="resource-widget resource-flow-layout col-13" data-query=
"collection:distribute/toolsreference/launchchecklist/size" data-sortorder=
"-timestamp" data-cardsizes="9x3,9x3,6x3,9x3,9x3,9x3" data-maxresults="6">
</div>

<div class="headerLine">
  <h2 id="confirm-platform">
    7. 앱의 플랫폼 및 화면 호환성 범위 확인
  </h2>


</div>

<p>
  앱을 게시하기 전에 대상으로 삼으려는 Android 플랫폼 버전과 장치 화면 크기에서 제대로 실행되도록 고안되었는지 확인하는 것이 중요합니다.


</p>

<p>
  앱 호환성 측면에서 Android 플랫폼 버전은 <a href="{@docRoot}guide/topics/manifest/uses-sdk-element.html#ApiLevels">API 레벨</a>로 정의됩니다.

 일단 앱이 게시되면 Android 장치에 대한 배포에 영향을 주기 때문에 앱이 <a href="{@docRoot}guide/topics/manifest/uses-sdk-element.html">&lt;minSdkVersion&gt;</a>과 호환되는 최소 버전을 확인해야 합니다.


</p>

<p>
  화면 크기의 경우 앱이 지원하려는 화면 크기 및 픽셀 밀도 범위에서 제대로 실행되고 모양이 어울리는지 확인해야 합니다.

 <a href="{@docRoot}guide/practices/screens_support.html">다중 화면 지원</a>의 조언에 따라 다중 화면 크기를 위한 확장성을 지원해야 합니다.
 그렇게 할 수 없는 경우에는 <a href="{@docRoot}guide/topics/manifest/supports-screens-element.html">&lt;supports-screens&gt;</a>를 사용하여 앱에서 지원되는 최소 화면 크기를 선언하십시오.


  그러면 Google Play가 그에 따라 앱의 사용 가능성을 제한하고, 선언된 최소 화면 크기 이상의 화면에서 장치를 사용할 수 있게 만듭니다.

</p>

<p>
  모든 Android 장치에서 Android 플랫폼 버전 및 화면 크기의 호환성에 대한 자세한 내용은 <a href="{@docRoot}about/dashboards/index.html">장치 대시보드</a> 차트를 참조하십시오.


</p>

<h3 class="rel-resources clearfloat">관련 자료</h3>

<div class="resource-widget resource-flow-layout col-13" data-query=
"collection:distribute/toolsreference/launchchecklist/platform" data-sortorder=
"-timestamp" data-cardsizes="6x3,6x3,6x3" data-maxresults="6">
</div>

<div class="headerLine">
  <h2 id="decide-price">
    8. 앱의 무료/유료 결정
  </h2>


</div>

<div class="figure">
  <img src="{@docRoot}images/gp-launch-checklist-1.png">
</div>

<p>
  Google Play에서 앱을 무료 또는 유료로 다운로드하도록 게시할 수 있습니다. 무료 앱은 Google Play에서 모든 Android 사용자가 다운로드할 수 있습니다.
 유료 앱은 유료 다운로드를 지원하는 국가에 거주하고 Google Play에서 신용카드 또는 휴대폰 결제(Direct Carrier Billing)와 같은 결제 양식을 등록한 사용자만 다운로드할 수 있습니다.



</p>

<p>
  Google Play에서 <strong>무료 앱은 계속 무료를 유지해야</strong> 하므로 앱을 무료로 할지 유료로 할지 결정하는 것은 중요합니다.

</p>

<ul>
  <li>
    <p>
      앱을 무료 앱으로 게시한 후에는 유료 앱으로 변경할 수 없습니다. 하지만 Google Play의 <a href="{@docRoot}google/play/billing/index.html">인앱 결제</a> 서비스를 통해 <a href="{@docRoot}google/play/billing/billing_overview.html#products">인앱 제품</a> 및 <a href="{@docRoot}google/play/billing/billing_subscriptions.html">구독</a>을 계속 판매할 수 있습니다.



    </p>
  </li>

  <li>
    <p>
      앱을 유료 앱으로 게시한 경우 언제든지 무료 앱으로 변경할 수 <em>있습니다</em>(<strong>그러나 유료로 다시 변경하는 것은 불가능함</strong>).

 인앱 제품과 구독을 판매할 수도 있습니다.
    </p>
  </li>
</ul>

<p>
  앱이 유료이거나 인앱 제품을 판매하는 경우 게시하기 전에 <a href="https://developers.google.com/wallet/digital/training/getting-started/merchant-setup">Google Wallet 판매자 계정을 설정</a>해야 합니다.


</p>

<h3 class="rel-resources clearfloat">관련 자료</h3>

<div class="resource-widget resource-flow-layout col-13" data-query=
"collection:distribute/toolsreference/launchchecklist/price" data-sortorder=
"-timestamp" data-cardsizes="9x3,9x3,6x3,9x3,9x3,9x3" data-maxresults="6">
</div>

<div class="headerLine">
  <h2 id="consider-billing">
    9. 인앱 결제 사용 고려
  </h2>


</div>

<p>
  Google Play <a href="{@docRoot}google/play/billing/index.html">인앱 결제</a>를 사용하여 애플리케이션에서 디지털 콘텐츠를 판매할 수 있습니다.
 이 서비스를 사용하여 다운로드 가능한 콘텐츠(예: 미디어 파일 또는 사진)와 가상 콘텐츠(예: 게임 레벨 또는 마법의 물약)를 포함한 광범위한 콘텐츠를 판매할 수 있습니다.


 인앱 결제 서비스를 통해 앱 내에서 일회 구매 및 구독을 판매할 수 있습니다. 이를 통해 앱이 설치된 기간 동안 수익을 창출할 수 있습니다.


</p>

<p>
  앱을 통해 수익을 창출하고 사용자를 확보하는 다양한 방법을 찾고 있는 경우 인앱 결제(In-app Billing) 또는 즉시 구매(Instant Buy)를 고려해 보십시오.
 이러한 서비스는 사용자와 개발자 모두에게 매우 인기가 있습니다.
 인앱 결제 또는 즉시 구매를 사용하려면 앱 바이너리를 변경해야 하므로, 릴리스 준비된 APK를 만들기 전에 구현을 완료하고 테스트해야 합니다.


</p>

<h3 class="rel-resources clearfloat">관련 자료</h3>

<div class="resource-widget resource-flow-layout col-13" data-query=
"collection:distribute/toolsreference/launchchecklist/purchasemethod"
data-sortorder="-timestamp" data-cardsizes="9x3,9x3,6x3,9x3,9x3,9x3"
data-maxresults="6">
</div>

<div class="headerLine">
  <h2 id="set-prices">
    10. 제품 가격 책정
  </h2>


</div>

<p>
  Google Play에서 앱, 인앱 또는 실물 제품을 판매하려는 경우 전 세계 사용자를 위해 다양한 통화로 제품의 가격을 책정해야 합니다.

 다양한 통화로 개별적으로 가격을 책정할 수 있으므로 시장 상황과 환율에 따라 유연하게 가격을 조정할 수 있습니다.


</p>

<p>
  게시하기 전에 제품 가격을 어떻게 책정하고 다양한 통화로 얼마로 책정할지 고려하십시오.
 나중에 개발자 콘솔을 통해 사용 가능한 모든 통화로 가격을 책정할 수 있습니다.

</p>

<h3 class="rel-resources clearfloat">관련 자료</h3>

<div class="resource-widget resource-flow-layout col-13" data-query=
"collection:distribute/toolsreference/launchchecklist/setprice" data-sortorder=
"-timestamp" data-cardsizes="9x3,9x3,9x3,9x3,9x3,9x3" data-maxresults="6">
</div>

<div class="headerLine">
  <h2 id="start-localization">
    11. 현지화 시작
  </h2>


</div>

<p>
  대상 국가를 염두에 두고 현지화 필요성을 평가하고 앱의 국제화를 확인하고 출시 예정일에 앞서 현지화 작업을 제대로 시작하는 것이 좋습니다.


</p>

<p>
  애플리케이션 디자인뿐만 아니라 적어도 다음과 같은 세 가지 항목도 현지화해야 합니다.

</p>

<ul>
  <li>
    <p>
      앱의 문자열, 이미지 및 기타 자료
    </p>
  </li>

  <li>
    <p>
      Google Play에서 앱의 스토어 목록 세부정보
    </p>
  </li>

  <li>
    <p>
      스토어 목록에 수반되는 앱의 그래픽 자산, 스크린샷 및 동영상

    </p>
  </li>
</ul>

<p>
  현지화 프로세스의 핵심 단계와 고려사항은 <a href="{@docRoot}distribute/tools/localization-checklist.html">현지화 검사 목록</a></a>을 참조하십시오.

</p>

<p>
  스토어 목록을 현지화하려면 먼저 앱 이름, 설명 및 홍보 문구를 작성하고 마무리하십시오.
 이들을 모두 수집하여 현지화를 의뢰하십시오.
 앱 업데이트 시 "최신 변경 사항" 텍스트도 선택적으로 번역할 수 있습니다.
 나중에 개발자 콘솔에서 현지화된 목록 세부정보를 추가하거나 Google Play 자동 번역을 통해 목록 세부정보를 원하는 언어로 번역할 수 있습니다.


</p>

<p>
  앱 목록이 글로벌 고객층을 사로잡으려면 무엇보다도 홍보 그래픽, 스크린샷 및 동영상의 현지화된 버전을 만들어야 합니다.

 예를 들어, 효율성을 극대화하기 위해 앱의 대표 그래픽에 번역해야 하는 텍스트를 포함할 수 있습니다.
 언어마다 서로 다른 홍보 그래픽을 만들어 개발자 콘솔에 업로드할 수 있습니다.

 홍보 동영상을 제공하는 경우 개발자는 지원하는 각 언어로 현지화된 버전을 만든 다음 해당 동영상 링크를 추가할 수 있습니다.


</p>

<p>
  번역이 완료되면 필요에 따라 앱 자료에 추가하고 제대로 로드되는지 테스트하십시오.
 나중을 위해 자산을 업로드하고 스토어 목록을 구성할 때 앱의 번역된 목록 세부정보를 저장하십시오.


</p>

<h3 class="rel-resources clearfloat">관련 자료</h3>

<div class="resource-widget resource-flow-layout col-13" data-query=
"collection:distribute/toolsreference/launchchecklist/localization"
data-sortorder="-timestamp" data-cardsizes="9x3,9x3,6x3,9x3,9x3,9x3"
data-maxresults="6">
</div>

<div class="headerLine">
  <h2 id="prepare-graphics">
    12. 홍보 그래픽, 스크린샷 및 동영상 준비
  </h2>


</div>

<p>
  Google Play에 게시할 때 다양한 고품질 그래픽 자산을 제공하여 앱 또는 브랜드를 소개할 수 있습니다.
 게시한 후에 이러한 그래픽 자산은 스토어 목록 페이지, 검색 결과 및 그 밖의 장소에 나타납니다.
 이 그래픽 자산은 사용자의 관심을 끌고 사용자를 확보하는 성공적인 스토어 목록 페이지의 핵심 부분이므로 그래픽 디자이너에게 의뢰할 것을 고려하십시오.


 스크린샷과 동영상도 앱의 모양과 사용/실행 방법을 보여주므로 매우 중요합니다.

</p>

<p>
  앱이나 브랜드를 쉽게 확인하고 화려하고 흥미로운 방식으로 강조할 수 있도록 모든 그래픽 자산을 디자인해야 합니다.
 이러한 자산은 사용자가 앱을 다운로드한 후에 모든 앱 시작 관리자에 표시된 것과 동일한 로고와 아이콘을 참조해야 합니다. 또한 게시하는 모든 앱의 그래픽 자산과 잘 어울려야 합니다. 해당 그래픽 자산은 스토어 목록 페이지에도 표시됩니다.




</p>

<p>
  앱을 글로벌 대상에게 더욱 효과적으로 마케팅할 수 있도록 홍보 그래픽, 스크린샷 및 동영상의 현지화된 버전을 만들고 Google Play 개발자 콘솔에 업로드할 수 있습니다.

 사용자가 앱의 스토어 목록을 방문하면 사용자의 언어로 제공된 홍보 그래픽, 스크린샷 및 동영상이 표시됩니다.


</p>

<p>
  홍보 그래픽을 현지화하려면 특정 언어로 사용자의 요구사항을 가장 잘 수용하도록 포함된 모든 텍스트를 번역하거나 서로 다른 이미지나 표현을 사용하거나 마케팅 접근방식을 변경할 수 있습니다.

 예를 들어, 대표 또는 홍보 그래픽에 제품 이름이나 기타 정보를 포함하는 경우 해당 텍스트를 번역하여 홍보 그래픽의 현지화된 버전에 추가할 수 있습니다.



</p>

<p>
  현지화된 그래픽 자산과 동영상도 매우 중요하므로 게시 예정일에 앞서 그래픽 자산과 동영상을 만들고 현지화하기 시작해야 합니다.


</p>

<h3 class="rel-resources clearfloat">관련 자료</h3>

<div class="resource-widget resource-flow-layout col-13" data-query=
"collection:distribute/toolsreference/launchchecklist/graphics" data-sortorder=
"-timestamp" data-cardsizes="9x3,9x3,6x3,9x3,9x3,9x3" data-maxresults="6">
</div>

<div class="headerLine">
  <h2 id="build-upload">
    13. 릴리스 준비된 APK 작성 및 업로드
  </h2>


</div>

<p>
  앱이 UI, 호환성 및 품질 요구사항을 만족스럽게 충족하면 릴리스 준비된 앱 버전을 작성할 수 있습니다.

  릴리스 준비된 APK를 개발자 콘솔에 업로드하고 사용자에게 배포합니다.

</p>

<p>
  릴리스 준비된 APK를 준비하는 과정은 배포 방식에 관계없이 모든 앱에서 동일합니다.
 일반적으로 이 과정에는 기본 코드 정리 및 최적화, 릴리스 키로 작성 및 서명, 최종 테스트가 포함됩니다.


</p>

<p>
  앱의 릴리스 준비된 버전을 만드는 자세한 방법은 <a href="{@docRoot}tools/publishing/preparing.html">릴리스 준비</a>를 참조하십시오.


</p>

<p>
  릴리스 준비된 APK는 개발자 콘솔에 업로드할 수 있습니다.
 필요한 경우 게시하기 전에 APK를 최신 버전으로 교체할 수 있습니다.

</p>
<!--<h3 class="rel-resources clearfloat">Related resources</h3>

<div class="resource-widget resource-flow-layout col-13"
  data-query="collection:distribute/toolsreference/launchchecklist/build"
  data-sortOrder="-timestamp"
  data-cardSizes="9x3,9x3,6x3,9x3,9x3,9x3"
  data-maxResults="6"></div>-->

<div class="headerLine">
  <h2 id="plan-beta">
    14. 베타 릴리스 계획
  </h2>


</div>

<div class="sidebox-wrapper" style="float:right;">
  <div class="sidebox">
    <h2>
      간편한 베타 테스트
    </h2>

    <p>
      Google Play에서 전 세계의 알파 및 베타 테스터 그룹을 설정할 수 있습니다.
 다음에 개발자 콘솔에 로그인할 때 이 강력한 기능을 확인하십시오.

    </p>
  </div>
</div>

<p>
  앱을 출시하기 전에 사용자의 실제 피드백을 받는 것은 항상 중요합니다. 신규 앱을 출시하는 경우에는 더욱 중요합니다.
 주요 시장에서 사용자에게 앱의 시험판 버전을 배포하고 간편한 피드백 및 버그 보고 기능을 제공하는 것이 좋습니다.



</p>

<p>
  Google Play에서 앱의 베타 프로그램을 설정할 수 있습니다. 개발자 콘솔에 로그인하여 APK를 업로드한 후에, 앱의 알파 및 베타 테스트를 진행할 사용자 그룹을 설정할 수 있습니다.

 소규모 알파 테스터 그룹부터 시작하여 더 큰 규모의 베타 테스터 그룹으로 이동할 수 있습니다.
 테스터 그룹에 추가된 사용자는 앱의 스토어 목록에 액세스하여 앱을 설치합니다. <strong>알파 또는 베타 버전 사용자는 리뷰나 평점을 남길 수 없으므로</strong> Google Play에서 <strong>저조한 평점에 대한 위험이 없습니다.</strong>



 Google 포럼이나 Google+와 같은 테스트 피드백에 대한 메커니즘을 준비해야 합니다.

</p>

<p>
  사용자의 피드백은 개발자가 UI, 번역 및 스토어 목록을 조정하여 사용자의 만족도를 높이는 데 도움이 됩니다.

</p>
<!-- Related resources

<table>
  <tr>
    <td>Beta-testing and Staged Rollouts
See how you can facilitate testing with Google Play.</td>
  </tr>
</table> -->

<div class="headerLine">
  <h2 id="complete-details">
    15. 앱의 스토어 목록 작성
  </h2>


</div>

<p>
  Google Play에서 앱의 제품 정보는 Android 장치나 웹에서 스토어 목록 페이지, 사용자가 앱에 대해 더 자세히 알아보기 위해 방문하는 페이지, 앱을 구입하거나 다운로드하기로 결정하는 페이지에 나타납니다.



</p>

<p>
  Google Play는 스토어 목록 페이지에서 화려한 그래픽, 스크린샷 및 동영상, 현지화된 설명, 릴리스 세부정보 및 다른 앱의 링크 등 앱을 홍보하고 사용자를 확보하는 다양한 방법을 제공합니다.


 앱 게시를 준비할 때 제품 세부정보 페이지에서 제공할 수 있는 모든 기능을 활용하여 앱을 사용자에게 최대한 매력적으로 보이게 만드십시오.


</p>

<p>
  출시 예정일에 앞서 제품 페이지 계획을 시작하고 현지화된 설명, 고품질 그래픽 자산, 스크린샷 및 동영상 등을 준비해야 합니다.


</p>

<p>
  게시 예정일이 다가옴에 따라 개발자는 개발자 콘솔의 스토어 목록 구성 페이지와 연관된 모든 필드, 옵션 및 자산을 숙지해야 합니다.

 페이지의 정보와 자산을 수집할 때 페이지 작성을 완료하고 게시 준비가 될 때까지 개발자 콘솔에 입력하거나 업로드하십시오.


</p>

<p>
  개발자 콘솔에서 앱의 대상 지역을 설정한 후에 지원하는 모든 언어에 대해 현지화된 스토어 목록, 홍보 그래픽 등을 추가하십시오.


</p>

<p>
  앱이 태블릿 장치를 대상으로 하는 경우 태블릿에서 실행되는 앱의 스크린샷을 하나 이상 포함하고 앱 설명, 릴리스 정보, 홍보 캠페인 등에서 태블릿 지원을 강조하십시오.



</p>

<h3 class="rel-resources clearfloat">관련 자료</h3>

<div class="resource-widget resource-flow-layout col-13" data-query=
"collection:distribute/toolsreference/launchchecklist/productdetails"
data-sortorder="-timestamp" data-cardsizes="9x3,9x3,6x3,9x3,9x3,9x3"
data-maxresults="6">
</div>

<div class="headerLine">
  <h2 id="use-badges">
    16. 홍보 캠페인에서 Google Play 배지 및 링크 사용
  </h2>


</div>

<p>
  Google Play 배지는 Android 사용자에게 공식적인 브랜드를 통해 앱을 홍보하는 수단을 제공합니다.
 <a href="{@docRoot}distribute/tools/promote/badges.html">Google Play 배지 생성기</a>로 배지를 빠르게 만들어 웹 페이지, 광고, 리뷰 등을 통해 사용자를 제품에 연결할 수 있습니다

 특수 <a href="{@docRoot}distribute/tools/promote/linking.html">링크 형식</a>을 사용하여 스토어 목록 페이지, 제품 목록 또는 검색 결과에 직접 연결할 수도 있습니다.


</p>

<p>
  출시 후에 앱이 주목을 받도록 하려면 가능한 한 많은 국가에서 많은 채널을 통해 제품을 알리는 홍보 캠페인을 진행하여 출시를 지원하는 것이 좋습니다.

 예를 들어, 광고 배치, 소셜 네트워크 또는 블로그 게시, 동영상 및 기타 미디어, 인터뷰 및 리뷰 또는 사용 가능한 기타 채널을 사용하여 출시를 홍보할 수 있습니다.



</p>

<h3 class="rel-resources clearfloat">관련 자료</h3>

<div class="resource-widget resource-flow-layout col-13" data-query=
"collection:distribute/toolsreference/launchchecklist/badges" data-sortorder=
"-timestamp" data-cardsizes="9x3,9x3,6x3,9x3,9x3,9x3" data-maxresults="6">
</div>

<div class="headerLine">
  <h2 id="final-checks">
    17. 최종 확인 및 게시
  </h2>


</div>

<p>
  게시할 준비가 되었다고 생각되면 개발자 콘솔에 로그인하여 잠시 시간을 내서 몇 가지 최종 확인을 하십시오.

</p>

<p>
  확인 사항:
</p>

<ul>
  <li>
    <p>
      개발자 프로필이 정확한 정보를 갖고 있고 적합한 Google Wallet 판매자 계정에 연결되었는지 여부(제품을 판매하는 경우).

    </p>
  </li>

  <li>
    <p>
      정확한 앱 버전을 업로드했는지 여부.
    </p>
  </li>

  <li>
    <p>
      모든 그래픽 자산, 스크린샷, 동영상, 현지화된 설명 등을 포함하여 스토어 목록의 모든 부분이 준비되었는지 여부.

    </p>
  </li>

  <li>
    <p>
      앱의 가격 책정 여부(유로 또는 무료).
    </p>
  </li>

  <li>
    <p>
      대상 국가(및 통신사)를 설정하고 구매자의 현지 통화로 제품 가격을 책정했는지 여부(해당되는 경우).

    </p>
  </li>

  <li>
    <p>
      "호환 장치"에 앱이 대상 장치에 액세스하는 것으로 표시되는지 여부.
 그렇지 않은 경우 개발 팀과 함께 앱의 요구사항과 필터링 규칙을 확인해야 합니다.

    </p>
  </li>

  <li>
    <p>
      정확한 웹사이트 링크와 올바른 지원 이메일 주소를 제공했는지 여부.

    </p>
  </li>

  <li>
    <p>
      앱이 콘텐츠 정책 가이드라인을 위반하지 않는지 여부.
    </p>
  </li>

  <li>
    <p>
      앱이 Google Play의 Android 콘텐츠 가이드라인 및 미국 수출법을 준수하는지 여부.

    </p>
  </li>
</ul>

<p>
  이제 앱을 게시할 준비가 되었습니다!
</p>

<p>
  업데이트를 릴리스하는 경우 <a href="http://support.google.com/googleplay/android-developer/bin/answer.py?hl=en&amp;answer=113476&amp;topic=2365760&amp;ctx=topic">업데이트 게시 요구사항</a>을 반드시 읽어보십시오.

</p>

<p>
  준비되면 개발자 콘솔에서 <strong>게시</strong> 버튼을 클릭하십시오.
 몇 시간 이내에 사용자가 앱을 사용할 수 있게 되고 Google Play에 검색, 탐색 또는 홍보 캠페인 링크용 제품 페이지가 나타납니다.


</p>

<h3 class="rel-resources clearfloat">관련 자료</h3>

<div class="resource-widget resource-flow-layout col-13" data-query=
"collection:distribute/toolsreference/launchchecklist/finalchecks"
data-sortorder="-timestamp" data-cardsizes="6x3,6x3,6x3,9x3,9x3,9x3"
data-maxresults="6">
</div>

<div class="headerLine">
  <h2 id="support-users">
    18. 출시 후 사용자 지원
  </h2>


</div>

<p>
  앱 또는 앱 업데이트를 게시한 후에 고객 지원은 중요합니다.
 신속하고 공손한 지원은 사용자의 만족도를 높여 제품의 평점과 리뷰에 긍정적인 영향을 주게 됩니다.

 개발자가 사용자의 요구사항과 피드백에 신속히 응답하면 사용자는 앱을 애용하고 추천할 가능성이 높습니다.
 게시 후에 통합된 홍보 캠페인을 사용하는 경우에 특히 그렇습니다.

</p>

<p>
  사용자와 연락을 유지하면서 지원할 수 있는 다양한 방법이 있습니다.
 가장 기본적인 방법으로 스토어 목록 페이지에 <em>지원 이메일 주소</em>를 제공하는 방법이 있습니다.
 그 밖에도 포럼, 메일 그룹 또는 Google+ 페이지 등 다양한 방식을 선택하여 지원할 수 있습니다.

 Google Play 팀은 다운로드, 설치 및 결제 문제를 지원합니다. 그 밖의 문제는 개발자가 지원해야 합니다.

 개발자가 지원할 수 있는 문제로는 기능 요청, 앱 사용 관련 문의, 호환성 설정 문의 등이 있습니다.

</p>

<p>
  게시 후 다음에 대한 계획을 세우십시오.
</p>

<ul>
  <li>
    <p>
      앱의 스토어 목록 페이지에서 평점 및 리뷰를 확인합니다.
 버그 또는 기타 문제를 알릴 수 있는 반복적인 테마에 주목합니다.
    </p>
  </li>

  <li>
    <p>
      앱의 호환성 설정을 업데이트해야 할 수도 있으므로 새 Android 플랫폼 버전 출시에 유의합니다.

    </p>
  </li>

  <li>
    <p>
      지원 자료의 링크를 웹사이트에 제공하고 포럼과 같은 기타 지원을 설정합니다.

    </p>
  </li>

  <li>
    <p>
      스토어 목록 페이지에 적절한 지원 이메일 주소를 제공하고 사용자의 이메일에 답변합니다.

    </p>
  </li>

  <li>
    <p>
      사용자가 만족하면 앞으로도 구매할 가능성이 높으므로 Google Play가 제공하는 자동 환불 창구 이외에도 관대한 환불 정책을 제공합니다.


    </p>
  </li>

  <li>
    <p>
      앱의 문제를 인정하고 해결합니다. 이는 투명성 제고에 도움이 되고 스토어 목록 페이지에 알려진 문제를 미리 나열할 수 있습니다.

    </p>
  </li>

  <li>
    <p>
      품질을 유지하면서 가능한 한 자주 업데이트를 게시합니다. 단, 너무 잦은 업데이트로 사용자를 성가시게 해서는 안 됩니다.

    </p>
  </li>

  <li>
    <p>
      업데이트를 게시할 때마다 변경 사항을 간단히 설명합니다. 개발자 콘솔에서 이 정보를 입력할 수 있습니다.
 이 정보를 읽은 사용자는 개발자가 앱 품질을 개선하는 데 적극적이라고 평가할 것입니다.


    </p>
  </li>
</ul>
</ul>

<h3 class="rel-resources clearfloat">관련 자료</h3>

<div class="resource-widget resource-flow-layout col-13"
  data-query="collection:distribute/toolsreference/launchchecklist/afterlaunch"
  data-sortOrder="-timestamp"
  data-cardSizes="9x3,9x3,9x3,9x3,9x3,9x3"
  data-maxResults="6"></div>
