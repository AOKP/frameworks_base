page.title=Управление жизненным циклом операций
page.tags=жизненный цикл операций
helpoutsWidget=true

trainingnavtop=true
startpage=true

@jd:body

<div id="tb-wrapper">
<div id="tb">


<h2>Необходимые знания и компоненты</h2>
<ul>
  <li>Как создать проект для Android (см. <a href="{@docRoot}training/basics/firstapp/creating-project.html">Создание проекта для Android
</a>)</li>
</ul>


<h2>См. также:</h2>
<ul>
  <li><a href="{@docRoot}guide/components/activities.html">Операции</a></li>
</ul>


<h2>Попробуйте сами</h2>

<div class="download-box">
 <a href="http://developer.android.com/shareables/training/ActivityLifecycle.zip" class="button">Загрузить демонстрацию</a>
 <p class="filename">ActivityLifecycle.zip</p>
</div>

</div>
</div>

<p>Во время навигации пользователя по вашему приложению экземпляры
{@link android.app.Activity} внутри приложения переключаются между разными состояниями их
жизненного цикла Например, при первом запуске
операции она получает высокий приоритет в системе и привлекает внимание
пользователя. Во время этого процесса система Android вызывает серию методов жизненного цикла
операции, позволяя настроить пользовательский интерфейс и другие компоненты. Если пользователь выполняет
действие, запускающее другую операцию, или переключается на другое приложение, система вызывает другой набор
методов жизненного цикла для операции, поскольку она переносится на фоновый уровень (операция больше не
отображается, но экземпляр и состояние остаются без изменений).</p>

<p>В методах обратного вызова жизненного цикла можно декларировать поведение операции, когда
пользователь прекращает и снова запускает операцию.  Например, если вы разрабатываете проигрыватель потокового видео,
то можете сделать так, чтобы при переключении пользователя на другое приложение видео ставилось на паузу,
а сетевое соединение разрывалось. После возврата пользователя проигрыватель может снова подключиться к сети, и пользователь сможет возобновить воспроизведение
видео с того же самого места.</p>

<p>В этом учебном курсе разъясняются важные методы обратного вызова жизненного цикла, которые получает каждый экземпляр {@link
android.app.Activity}, и описывается как их использовать, чтобы операция выполнялась так, как этого ожидает
пользователь, и не потребляла системные ресурсы, когда они ей не нужны.</p>

<h2>Уроки</h2>

<dl>
  <dt><b><a href="starting.html">Запуск операции</a></b></dt>
  <dd>Из этого урока вы узнаете об основах жизненного цикла операций, способах запуска вашего приложения пользователями и вариантах
создания базовых операций.</dd>
  <dt><b><a href="pausing.html">Приостановка и возобновление операции</a></b></dt>
  <dd>Вы узнаете, что происходит во время приостановки операции (окно операции частично затемнено) и возобновления операции,
и что следует делать во время подобных изменений состояния.</dd>
  <dt><b><a href="stopping.html">Остановка и перезапуск операции</a></b></dt>
  <dd>В этом уроке рассказывается о том, что происходит, когда пользователь полностью прекращает операцию, а потом возвращается к ней.</dd>
  <dt><b><a href="recreating.html">Повторное создание операции</a></b></dt>
  <dd>Вы узнаете, что происходит при полном прекращении операции, и как можно восстановить ее состояние
в случае необходимости.</dd>
</dl>

